syntax = "proto3";

import "google/protobuf/empty.proto";

package api;


message Point3D {
  double x =1;
  double y =2;
  double z =3;
}

message PopulatedSystemBriefInfo {
  string allegiance    = 1;
  string government    = 2;
  string faction       = 3;
  string faction_state = 4;
  int64 population     = 5;
  string reserve       = 6;
  string security      = 7;
  string economy       = 8;
}

message SystemSummary {
  string name = 1;
  Point3D coords = 2;
  PopulatedSystemBriefInfo pop_system_info =3;
}

message DockableStationShortInfo {
  string name = 1;
  string landing_pad = 2;
  double distance = 3;
  bool planetary = 4;
}

message HumanWorldStat {
	int64 systems = 1;
	int64 stations =2;
	int64 factions  = 3;
	int64 human_factions  = 4;
	int64 population = 5;
}

message ShortFactionState {
  string name       = 1;
  string state      = 2;
  string allegiance = 3;
}

message InterestingSystem4State {
  string name       = 1;
  Point3D coords    = 2;
  int64 population  = 3;
  repeated ShortFactionState faction_states = 4;
}

message SystemByNameRequest {
  string name = 1;
}

message SystemsDistanceRequest {
  string name1 = 1;
  string name2 = 2;
}

message SystemsDistanceReply {
  string error = 1; // the error if non - empty
  double distance = 2;
}

message SystemSummaryReply {
  string error = 1; // the error if non - empty
  SystemSummary summary = 2;
}

message DockableStationsReply {
  string error = 1; // the error if non - empty
  repeated DockableStationShortInfo stations = 2;
  repeated string suggested_systems = 3;
}

message MostVisitedSystemsRequest {
  string origin = 1;
  double max_distance = 2;
  int64 max_age = 3;
  int64 limit = 4;
}

message SystemVisitsStat {
	string name = 1;
	int64 count = 2;
	double distance = 3; // distance from origin
}

message MostVisitedSystemsReply {
	string error = 1; // the error if non - empty
    repeated SystemVisitsStat system_visit_stat = 2;
    int64 total_count = 3;
}

message InterestingSystem4StateRequest {
  string name = 1;
  repeated string states = 2;
  int64 min_pop  = 3;
  double max_distance = 4;
}

message InterestingSystem4StateReply {
  string error = 1; // the error if non - empty
  repeated InterestingSystem4State systems = 2;
}

service EDInfoCenter {
  rpc GetDistance (SystemsDistanceRequest) returns (SystemsDistanceReply) {}
  rpc GetSystemSummary(SystemByNameRequest) returns (SystemSummaryReply) {}
  rpc GetDockableStations(SystemByNameRequest) returns (DockableStationsReply) {}
  rpc GetMostVisitedSystems(MostVisitedSystemsRequest) returns (MostVisitedSystemsReply) {}
  rpc GetInterestingSystem4State(InterestingSystem4StateRequest) returns(InterestingSystem4StateReply) {}
  rpc GetHumanWorldStat(google.protobuf.Empty) returns (HumanWorldStat){}
}
